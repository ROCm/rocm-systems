What is AQLProfile?
===================

The Architected Queuing Language profiling library (AQLProfile) is an
open source library that enables advanced GPU profiling and tracing on
AMD platforms. It works in conjunction with
`rocprofiler-sdk <https://github.com/ROCm/rocprofiler-sdk>`__ to
support profiling methods such as `performance counters
(PMC) <examples/pmc-workflow.rst>`__ and `SQ thread trace
(SQTT) <examples/sqtt-workflow.rst>`__. AQLProfile provides the
foundational mechanisms for constructing AQL packets and managing
profiling operations across multiple AMD GPU architecture families. The
development of AQLProfile is aligned with ``rocprofiler-sdk``, ensuring
compatibility and feature support for new GPU architectures and
profiling requirements.

AQLProfile builds on concepts from the Heterogeneous System Architecture
(HSA) and the AQL, which define the foundations for GPU command
processing and profiling on AMD platforms. For further reading, see:

-  `HSA Platform System Architecture
   Specification <http://hsafoundation.com/wp-content/uploads/2021/02/HSA-SysArch-1.2.pdf>`__
-  `HSA Runtime Programmer's Reference
   Specification <http://hsafoundation.com/wp-content/uploads/2021/02/HSA-Runtime-1.2.pdf>`__

Features
--------

-  Profiling AQL packets for GPU workloads.
-  Performance counters and SQ thread traces.
-  Support for GFX9, GFX10, GFX11, and GFX12 architecture families.
-  Verbose tracing and error logging capabilities.
-  Thread trace binary data generated by AQLProfile can be decoded using
   `rocprof-trace-decoder <https://github.com/ROCm/rocprof-trace-decoder/releases>`__.

Who should use this library?
----------------------------

-  **End users**: If you want to profile AMD GPUs, use
   `rocprofiler-sdk <https://github.com/ROCm/rocprofiler-sdk>`__ or
   tools that depend on it. You do *not* need to use AQLProfile
   directly.
-  **Developers/integrators**: If you're building profiling tools,
   custom workflows, or need to extend profiling capabilities, you may
   use AQLProfile directly as a backend.

How does AQLProfile fit into the ROCm profiling stack?
------------------------------------------------------

Here's the typical workflow:

Application → ``rocprofiler-sdk`` ⇄ AQLProfile  
``rocprofiler-sdk`` → ``HSA/ROCR/KFD`` → AMD GPU hardware

- **AQLprofile** generates profiling command packets (AQL/PM4) tailored to the GPU architecture. It does *not* interact with hardware or drivers directly; it only produces the packets and buffer requirements requested by ``rocprofiler-sdk``.
 
- **rocprofiler-sdk** provides a higher-level API and user-facing tools, using AQLprofile internally. It manages profiling sessions, submits packets to the GPU via HSA/ROCR/KFD, and collects results.

Supported architectures and counter blocks
------------------------------------------

The AQLProfile library supports profiling and tracing GPU workloads
across multiple architectures. Here's a summary of the counter blocks
supported for each architecture:

+-------------+------+--------+--------+--------+------+------+-----+
| Counter     | GFX9 | GFX908 | GFX90A | GFX942 | G    | G    | GF  |
| Block Name  |      |        |        |        | FX10 | FX11 | X12 |
+=============+======+========+========+========+======+======+=====+
| ATC         | ✅   | ❌     | ❌     | ✅     | ❌   | ❌   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| ATC_L2      | ✅   | ❌     | ❌     | ❌     | ❌   | ❌   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| CHA         | ❌   | ❌     | ❌     | ❌     | ❌   | ❌   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| CHC         | ❌   | ❌     | ❌     | ❌     | ❌   | ❌   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| CPC         | ✅   | ✅     | ✅     | ✅     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| CPF         | ✅   | ✅     | ✅     | ✅     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| CPG         | ❌   | ❌     | ❌     | ❌     | ❌   | ❌   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| GCEA        | ✅   | ✅     | ✅     | ✅     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| GCR         | ❌   | ❌     | ❌     | ❌     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| GDS         | ✅   | ❌     | ❌     | ❌     | ✅   | ✅   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| GL1A        | ❌   | ❌     | ❌     | ❌     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| GL1C        | ❌   | ❌     | ❌     | ❌     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| GL2A        | ❌   | ❌     | ❌     | ❌     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| GL2C        | ❌   | ❌     | ❌     | ❌     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| GRBM        | ✅   | ✅     | ✅     | ✅     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| GRBMH       | ❌   | ❌     | ❌     | ❌     | ❌   | ❌   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| GRBM_SE     | ✅   | ❌     | ❌     | ❌     | ❌   | ❌   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| GUS         | ❌   | ❌     | ❌     | ❌     | ✅   | ✅   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| MC_VM_L2    | ✅   | ❌     | ❌     | ❌     | ❌   | ❌   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| RPB         | ✅   | ✅     | ❌     | ❌     | ❌   | ❌   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| SDMA        | ❌   | ❌     | ❌     | ❌     | ❌   | ❌   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| SPI         | ✅   | ✅     | ✅     | ✅     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| SQ          | ✅   | ✅     | ✅     | ✅     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| SQ_CS       | ✅   | ❌     | ❌     | ❌     | ❌   | ❌   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| SX          | ✅   | ❌     | ❌     | ❌     | ✅   | ✅   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| TA          | ✅   | ✅     | ✅     | ✅     | ✅   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| TCA         | ✅   | ✅     | ✅     | ✅     | ❌   | ❌   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| TCC         | ✅   | ✅     | ✅     | ✅     | ❌   | ❌   | ❌  |
+-------------+------+--------+--------+--------+------+------+-----+
| TCP         | ✅   | ✅     | ✅     | ✅     | ❌   | ✅   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+
| TD          | ✅   | ✅     | ✅     | ✅     | ❌   | ❌   | ✅  |
+-------------+------+--------+--------+--------+------+------+-----+

Refer to the SDK documentation for the most up-to-date list of supported
architectures.
