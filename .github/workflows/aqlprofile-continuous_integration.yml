name: AqlProfile Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - 'projects/aqlprofile/**'
      - '!projects/aqlprofile/*.md'
      - '!projects/aqlprofile/CODEOWNERS'
      - '!projects/aqlprofile/source/docs/**'
  pull_request:
    paths:
      - 'projects/aqlprofile/**'
      - '!projects/aqlprofile/*.md'
      - '!projects/aqlprofile/CODEOWNERS'
      - '!projects/aqlprofile/source/docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # TODO(jrmadsen): replace LD_RUNPATH_FLAG, GPU_TARGETS, etc. with internal handling in cmake
  PATH: "/usr/bin:$PATH"
  navi3_EXCLUDE_TESTS_REGEX: ""
  vega20_EXCLUDE_TESTS_REGEX: ""
  mi200_EXCLUDE_TESTS_REGEX: ""
  mi300_EXCLUDE_TESTS_REGEX: ""
  mi300a_EXCLUDE_TESTS_REGEX: ""
  mi325_EXCLUDE_TESTS_REGEX: ""
  navi4_EXCLUDE_TESTS_REGEX: ""
  navi3_EXCLUDE_LABEL_REGEX: ""
  vega20_EXCLUDE_LABEL_REGEX: ""
  mi200_EXCLUDE_LABEL_REGEX: ""
  mi300_EXCLUDE_LABEL_REGEX: ""
  mi300a_EXCLUDE_LABEL_REGEX: ""
  mi325_EXCLUDE_LABEL_REGEX: ""
  navi4_EXCLUDE_LABEL_REGEX: ""

jobs:
  core-deb:
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      fail-fast: false
      matrix:
        runner: ['navi4', 'navi3', 'mi3xx']
        os: ['ubuntu-22.04']
        build-type: ['RelWithDebInfo']

    runs-on: rocprofiler-${{ matrix.runner }}

    permissions:
      contents: read
      pull-requests: write

    # define this for containers
    env:
      GIT_DISCOVERY_ACROSS_FILESYSTEM: 1
      CORE_EXT_RUNNER: mi300a

    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: projects/aqlprofile


    - name: Install requirements
      timeout-minutes: 10
      shell: bash
      run: |
        cd projects/aqlprofile
        git config --global --add safe.directory '*'
        apt-get update
        apt-get install -y build-essential cmake g++-11 g++-12 python3-pip libgtest-dev libgmock-dev
        update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 10 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11
        update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 20 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12

    - name: List Files
      shell: bash
      run: |
        cd projects/aqlprofile
        echo "PATH: ${PATH}"
        echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}"
        which-realpath() { echo -e "\n$1 resolves to $(realpath $(which $1))"; echo "$($(which $1) --version &> /dev/stdout | head -n 1)"; }
        for i in python3 git cmake ctest gcc g++ gcov; do which-realpath $i; done
        cat /opt/rocm/.info/version
        ls -la
        pwd

    - name: Configure, Build, and Test
      timeout-minutes: 30
      shell: bash
      working-directory: projects/aqlprofile
      run:
        LD_LIBRARY_PATH=$(pwd)/build:$LD_LIBRARY_PATH ctest --output-on-failure -V -DCTEST_SOURCE_DIRECTORY="$(pwd)"
          -DCTEST_BINARY_DIRECTORY="$(pwd)/build" -DAQLPROFILE_BUILD_NUM_JOBS="16" -DCTEST_SITE="${RUNNER_HOSTNAME}"
          -DCTEST_BUILD_NAME=PR_${{ github.ref_name }}_${{ github.repository }}-${{ matrix.os }}-${{ matrix.runner }}-core
          -DCMAKE_CTEST_ARGUMENTS=""
          -DAQLPROFILE_BUILD_TESTS=ON
          -DAQLPROFILE_EXTRA_CONFIGURE_ARGS=""
          -S ./dashboard.cmake

  core-rpm:
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      fail-fast: false
      matrix:
        runner: ['mi300']
        os: ['rhel', 'sles']
        build-type: ['RelWithDebInfo']
        ci-flags: ['--linter clang-tidy']

    runs-on: rocprofiler-${{ matrix.os }}

    permissions:
      contents: read
      pull-requests: write

    # define this for containers
    env:
      GIT_DISCOVERY_ACROSS_FILESYSTEM: 1
      CORE_EXT_RUNNER: mi300

    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: projects/aqlprofile

    - name: Install requirements
      timeout-minutes: 10
      shell: bash
      run: |
        cd projects/aqlprofile
        git config --global --add safe.directory '*'

    - name: List Files
      shell: bash
      run: |
        cd projects/aqlprofile
        echo "PATH: ${PATH}"
        echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}"
        which-realpath() { echo -e "\n$1 resolves to $(realpath $(which $1))"; echo "$($(which $1) --version &> /dev/stdout | head -n 1)"; }
        for i in python3 git cmake ctest gcc g++ gcov; do which-realpath $i; done
        cat /opt/rocm/.info/version
        ls -la
        pwd

    - name: Configure, Build, and Test
      timeout-minutes: 30
      shell: bash
      working-directory: projects/aqlprofile
      run:
        LD_LIBRARY_PATH=$(pwd)/build:$LD_LIBRARY_PATH ctest --output-on-failure -V -DCTEST_SOURCE_DIRECTORY="$(pwd)"
          -DCTEST_BINARY_DIRECTORY="$(pwd)/build" -DAQLPROFILE_BUILD_NUM_JOBS="16" -DCTEST_SITE="${RUNNER_HOSTNAME}"
          -DCTEST_BUILD_NAME=PR_${{ github.ref_name }}_${{ github.repository }}-${{ matrix.os }}-${{ matrix.runner }}-core
          -DCMAKE_CTEST_ARGUMENTS=""
          -DAQLPROFILE_BUILD_TESTS=ON
          -DAQLPROFILE_EXTRA_CONFIGURE_ARGS=""
          -S ./dashboard.cmake
