name: rocprofiler-sdk ROCm Release Compatibility

permissions:
    contents: read

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - 'projects/rocprofiler-sdk/**'
      - '!projects/rocprofiler-sdk/CODEOWNERS'
      - '!projects/rocprofiler-sdk/source/docs/**'
      - '!projects/rocprofiler-sdk/*.md'
  pull_request:
    paths:
      - 'projects/rocprofiler-sdk/**'
      - '!projects/rocprofiler-sdk/CODEOWNERS'
      - '!projects/rocprofiler-sdk/source/docs/**'
      - '!projects/rocprofiler-sdk/*.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ROCM_PATH: "/opt/rocm"
  PATH: "/usr/bin:$PATH"

jobs:
  rocm-release-compatibility:
    strategy:
      fail-fast: false
      matrix:
        rocm-release: ['6.2', '6.3', '6.4', 'latest']
        os: ['ubuntu-22.04']
        build-type: ['Release']

    runs-on: ubuntu-latest
    container:
        image: rocm/dev-${{ matrix.os }}:${{ matrix.rocm-release }}

    # define this for containers
    env:
      GIT_DISCOVERY_ACROSS_FILESYSTEM: 1

    steps:
    - name: Install Git
      timeout-minutes: 25
      continue-on-error: true
      run: |
        if ! apt-get update || \
           ! apt-get install -y software-properties-common || \
           ! add-apt-repository -y ppa:git-core/ppa || \
           ! apt-get update || \
           ! apt-get install -y git; then
          echo "FAILED_STEP=Install Git" >> $GITHUB_ENV
          echo "::warning::Install Git failed - remaining steps will be skipped"
          exit 1
        fi

    - uses: actions/checkout@v4
      id: checkout
      if: ${{ env.FAILED_STEP == '' }}
      continue-on-error: true
      with:
        sparse-checkout: projects/rocprofiler-sdk

    - name: Check Checkout Status
      if: ${{ steps.checkout.outcome == 'failure' }}
      run: |
        echo "FAILED_STEP=Checkout" >> $GITHUB_ENV
        echo "::warning::Checkout failed - remaining steps will be skipped"
        exit 0

    - name: Install requirements
      if: ${{ matrix.rocm-release == '6.2' && env.FAILED_STEP == '' }}
      timeout-minutes: 10
      shell: bash
      continue-on-error: true
      run: |
        if ! cd projects/rocprofiler-sdk || \
           ! git config --global --add safe.directory '*' || \
           ! apt-get update || \
           ! apt-get install -y build-essential cmake g++-11 g++-12 python3-pip libdw-dev libsqlite3-dev || \
           ! update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 10 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11 || \
           ! update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 20 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12 || \
           ! python3 -m pip install -U --user -r requirements.txt; then
          echo "FAILED_STEP=Install requirements" >> $GITHUB_ENV
          echo "::warning::Install requirements failed - remaining steps will be skipped"
          exit 1
        fi

    - name: Install requirements
      if: ${{ matrix.rocm-release != '6.2' && env.FAILED_STEP == '' }}
      timeout-minutes: 10
      shell: bash
      continue-on-error: true
      run: |
        if ! cd projects/rocprofiler-sdk || \
           ! git config --global --add safe.directory '*' || \
           ! apt-get update || \
           ! apt-get install -y build-essential cmake g++-11 g++-12 python3-pip libdw-dev libsqlite3-dev rccl-dev rccl-unittests rocjpeg-dev rocjpeg-test rocdecode-dev rocdecode-test || \
           ! update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 10 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11 || \
           ! update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 20 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12 || \
           ! python3 -m pip install -U --user -r requirements.txt; then
          echo "FAILED_STEP=Install requirements" >> $GITHUB_ENV
          echo "::warning::Install requirements failed - remaining steps will be skipped"
          exit 1
        fi

    - name: List Files
      if: ${{ env.FAILED_STEP == '' }}
      shell: bash
      continue-on-error: true
      run: |
        if ! (cd projects/rocprofiler-sdk && \
              echo "Number of processors: $(nproc)" && \
              echo "PATH: ${PATH}" && \
              echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}" && \
              which-realpath() { echo -e "\n$1 resolves to $(realpath $(which $1))"; echo "$($(which $1) --version &> /dev/stdout | head -n 1)"; } && \
              for i in python3 git cmake ctest gcc g++ gcov; do which-realpath $i; done && \
              cat /opt/rocm/.info/version && \
              ls -la); then
          echo "FAILED_STEP=List Files" >> $GITHUB_ENV
          echo "::warning::List Files failed - remaining steps will be skipped"
          exit 1
        fi

    - name: Configure and Build
      if: ${{ env.FAILED_STEP == '' }}
      timeout-minutes: 30
      shell: bash
      working-directory: projects/rocprofiler-sdk
      continue-on-error: true
      run: |
        if ! python3 source/scripts/run-ci.py -B build \
          --name ${{ github.repository }}-${{ github.ref_name }}-${{ matrix.os }}-rocm-${{ matrix.rocm-release }} \
          --build-jobs 4 \
          --site "$(hostname)" \
          --stages Start Update Configure Build Submit \
          --run-attempt ${{ github.run_attempt }} \
          --disable-cdash \
          -- \
          -DROCPROFILER_DEP_ROCMCORE=ON \
          -DROCPROFILER_BUILD_{TESTS,SAMPLES,DOCS}=OFF \
          -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
          -DCMAKE_INSTALL_PREFIX="$(realpath /opt/rocm)" \
          -DPython3_EXECUTABLE=$(which python3); then
          echo "FAILED_STEP=Configure and Build" >> $GITHUB_ENV
          echo "::warning::Configure and Build failed - remaining steps will be skipped"
          exit 1
        fi

    - name: Install
      if: ${{ env.FAILED_STEP == '' }}
      timeout-minutes: 10
      continue-on-error: true
      run: |
        if ! (cd projects/rocprofiler-sdk && \
              cmake --build build --target install); then
          echo "FAILED_STEP=Install" >> $GITHUB_ENV
          echo "::warning::Install failed - remaining steps will be skipped"
          exit 1
        fi

    - name: Final Status Check
      if: always()
      shell: bash
      run: |
        if [[ "${{ env.FAILED_STEP }}" == "Checkout" ]] || [[ "${{ env.FAILED_STEP }}" == "Install Git" ]] || [[ "${{ env.FAILED_STEP }}" == "Install requirements" ]]; then
          echo "::notice::✅ TEST PASSED - Job failed at Install requirements step"
          echo "::notice::Since the failure occurred during Install requirements, this is considered a passing test"
          echo "## Test Result: PASSED ✅" >> $GITHUB_STEP_SUMMARY
          echo "**Reason:** Failed at Install requirements step (acceptable failure)" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** Job marked as successful" >> $GITHUB_STEP_SUMMARY
          exit 0
        elif [[ "${{ env.FAILED_STEP }}" == "" ]]; then
          echo "::notice::✅ TEST PASSED - All steps completed successfully"
          echo "## Test Result: PASSED ✅" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** All steps completed successfully" >> $GITHUB_STEP_SUMMARY
          exit 0
        else
          echo "::error::❌ TEST FAILED - Job failed at step: ${{ env.FAILED_STEP }}"
          echo "::error::Failure occurred after Install requirements, this is a real test failure"
          echo "## Test Result: FAILED ❌" >> $GITHUB_STEP_SUMMARY
          echo "**Failed at step:** ${{ env.FAILED_STEP }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** Job marked as failed" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
