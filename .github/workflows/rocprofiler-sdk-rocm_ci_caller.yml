name: rocprofiler-sdk ROCm CI Caller
on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'projects/rocm-smi-lib/**'
      - 'projects/rocprofiler-register/**'
      - 'projects/rocprofiler-sdk/**'
      - 'projects/rocr-runtime/**'
  push:
    paths:
      - 'projects/rocm-smi-lib/**'
      - 'projects/rocprofiler-register/**'
      - 'projects/rocprofiler-sdk/**'
      - 'projects/rocr-runtime/**'
  workflow_dispatch:
  issue_comment:
    types: [created]

jobs:
  call-workflow:
    if: github.event_name != 'issue_comment' ||(github.event_name == 'issue_comment' && github.event.issue.pull_request && (startsWith(github.event.comment.body, '!verify') || startsWith(github.event.comment.body, '!verify release') || startsWith(github.event.comment.body, '!verify retest')))  
    uses: AMD-ROCm-Internal/rocm_ci_infra/.github/workflows/rocm_ci.yml@mainline
    secrets: inherit
    with:
      input_sha: ${{github.event_name == 'pull_request' && github.event.pull_request.head.sha || (github.event_name == 'push' && github.sha) || (github.event_name == 'issue_comment' && github.event.issue.pull_request.head.sha) || github.sha}}
      input_pr_num: ${{github.event_name == 'pull_request' && github.event.pull_request.number || (github.event_name == 'issue_comment' && github.event.issue.number) || 0}}
      input_pr_url: ${{github.event_name == 'pull_request' && github.event.pull_request.html_url || (github.event_name == 'issue_comment' && github.event.issue.pull_request.html_url) || ''}}
      input_pr_title: ${{github.event_name == 'pull_request' && github.event.pull_request.title || (github.event_name == 'issue_comment' && github.event.issue.pull_request.title) || ''}}
      repository_name: ${{ github.repository }}
      base_ref: ${{github.event_name == 'pull_request' && github.event.pull_request.base.ref || (github.event_name == 'issue_comment' && github.event.issue.pull_request.base.ref) || github.ref}}
      trigger_event_type: ${{ github.event_name }}
      comment_text: ${{ github.event_name == 'issue_comment' && github.event.comment.body || '' }}
