name: Ubuntu Packaging (Release, ROCm)
run-name: ubuntu-packaging

on:
  push:
    branches: [amd-staging, amd-mainline, release/**]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - 'source/docs/**'
      - 'source/python/gui/**'
      - '.github/workflows/docs.yml'
      - '.github/workflows/cpack.yml'
      - '.github/workflows/containers.yml'
      - '.github/workflows/formatting.yml'
      - '.github/workflows/weekly-mainline-sync.yml'
      - 'docker/**'
      - .wordlist.txt
      - CMakePresets.json
  pull_request:
    branches: [amd-staging, amd-mainline, release/**]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - 'source/docs/**'
      - 'source/python/gui/**'
      - '.github/workflows/docs.yml'
      - '.github/workflows/cpack.yml'
      - '.github/workflows/containers.yml'
      - '.github/workflows/formatting.yml'
      - '.github/workflows/weekly-mainline-sync.yml'
      - 'docker/**'
      - .wordlist.txt
      - CMakePresets.json

env:
  BUILD_DIR: './release'
  SOURCE_DIR: './source'
  INSTALL_DIR: '/opt/rocprofiler-systems'

jobs:
  ubuntu-packaging:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: [ '22.04', '24.04' ]
        rocm-version: [ '6.4' ]
    container:
      image: dgaliffiamd/rocprofiler-systems:ci-base-ubuntu-${{ matrix.release }}
    steps:
    - uses: actions/checkout@v4

    - name: Configure Env
      shell: bash
      run:
        echo "/opt/rocm/bin" >> $GITHUB_PATH  &&
        echo "ROCM_PATH=/opt/rocm" >> $GITHUB_ENV &&
        echo "LD_LIBRARY_PATH=/opt/rocm/lib:${LD_LIBRARY_PATH}" >> $GITHUB_ENV &&
        env

    - name: Install ROCm
      timeout-minutes: 15
      shell: bash
      run: |
        set -v
        ROCM_VERSION=${{ matrix.rocm-version }}
        ROCM_MAJOR=$(echo ${ROCM_VERSION} | sed 's/\./ /g' | awk '{print $1}')
        ROCM_MINOR=$(echo ${ROCM_VERSION} | sed 's/\./ /g' | awk '{print $2}')
        ROCM_VERSN=$(( (${ROCM_MAJOR}*10000)+(${ROCM_MINOR}*100) ))
        wget -q https://repo.radeon.com/amdgpu-install/${{ matrix.rocm-version }}/ubuntu/${{ contains(matrix.release, '22') && 'jammy' || 'noble' }}/amdgpu-install_${ROCM_MAJOR}.${ROCM_MINOR}.${ROCM_VERSN}-1_all.deb
        apt-get install -y ./amdgpu-install_${ROCM_MAJOR}.${ROCM_MINOR}.${ROCM_VERSN}-1_all.deb
        apt-get update
        apt-get install -y rocm-dev rocdecode-dev libavformat-dev libavcodec-dev

    - name: Build rocprofiler-systems
      timeout-minutes: 35
      shell: bash
      run: |
        set -v
        git config --global --add safe.directory ${PWD} &&
        cmake --preset release -B $BUILD_DIR -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -DCPACK_PACKAGING_INSTALL_PREFIX=$INSTALL_DIR
        cmake --build $BUILD_DIR --target all

    - name: Build and Install the Package
      timeout-minutes: 10
      shell: bash
      run: |
        set -v
        cd $BUILD_DIR
        cpack -G DEB
        dpkg -i *.deb

    - name: Verify Installation
      timeout-minutes: 15
      shell: bash
      run: |
        set -v
        echo "TO BE ADDED LATER"
