name: ubuntu-focal-external

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  BUILD_TYPE: RelWithDebInfo
  ELFUTILS_DOWNLOAD_VERSION: 0.183
  OMNITRACE_DEBUG_FINALIZE: ON
  OMNITRACE_VERBOSE: 1
  OMNITRACE_CI: ON

jobs:
  ubuntu-focal-external:
    runs-on: ubuntu-20.04
    container:
      image: jrmadsen/omnitrace-ci:ubuntu-20.04
    strategy:
      matrix:
        compiler: ['g++-7', 'g++-8', 'g++-9', 'g++-10']

    steps:
    - uses: actions/checkout@v2

    - name: Install Packages
      timeout-minutes: 5
      run:
        apt-get update &&
        apt-get install -y build-essential m4 autoconf libtool python3-pip libiberty-dev clang libomp-dev ${{ matrix.compiler }} &&
        python3 -m pip install --upgrade pip &&
        python3 -m pip install numpy &&
        python3 -m pip install 'cmake==3.16.3' &&
        for i in 6 7 8 9; do /opt/conda/envs/py3.${i}/bin/python -m pip install numpy; done

    - name: Configure Env
      run:
        echo "CC=$(echo '${{ matrix.compiler }}' | sed 's/+/c/g')" >> $GITHUB_ENV &&
        echo "CXX=${{ matrix.compiler }}" >> $GITHUB_ENV &&
        echo "/opt/omnitrace/bin:${HOME}/.local/bin" >> $GITHUB_PATH &&
        echo "LD_LIBRARY_PATH=/opt/omnitrace/lib:${LD_LIBRARY_PATH}" >> $GITHUB_ENV

    - name: Configure CMake
      timeout-minutes: 5
      run:
        git config --global --add safe.directory ${PWD} &&
        cmake --version &&
        cmake -B build
          -DCMAKE_C_COMPILER=$(echo '${{ matrix.compiler }}' | sed 's/+/c/g')
          -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DCMAKE_INSTALL_PREFIX=/opt/omnitrace
          -DOMNITRACE_BUILD_TESTING=ON
          -DOMNITRACE_USE_MPI=OFF
          -DOMNITRACE_USE_HIP=OFF
          -DOMNITRACE_USE_OMPT=OFF
          -DOMNITRACE_USE_PYTHON=ON
          -DOMNITRACE_PYTHON_VERSIONS="3.6;3.7;3.8;3.9"
          -DOMNITRACE_PYTHON_ROOT_DIRS="/opt/conda/envs/py3.6;/opt/conda/envs/py3.7;/opt/conda/envs/py3.8;/opt/conda/envs/py3.9"

    - name: Build
      timeout-minutes: 45
      run:
        cmake --build build --target all --parallel 2 -- VERBOSE=1

    - name: Install
      timeout-minutes: 5
      run:
        cmake --build build --target install --parallel 2

    - name: Test
      timeout-minutes: 45
      run:
        cd build &&
        ldd ./omnitrace &&
        ./omnitrace --help &&
        ctest -V -N -O omnitrace-ctest-${{ env.GITHUB_JOB }}-commands.log &&
        ctest --output-on-failure --output-log omnitrace-ctest-${{ env.GITHUB_JOB }}.log --stop-on-failure

    - name: Test Install
      timeout-minutes: 10
      run: |
        set -v
        export OMNITRACE_DEBUG=ON
        which omnitrace-avail
        ldd $(which omnitrace-avail)
        omnitrace-avail --help
        omnitrace-avail -a
        which omnitrace-critical-trace
        ldd $(which omnitrace-critical-trace)
        which omnitrace
        ldd $(which omnitrace)
        omnitrace --help
        omnitrace -e -v 1 -o ls.inst --simulate -- ls
        for i in omnitrace-ls.inst-output/*; do echo -e "\n\n --> ${i} \n\n"; cat ${i}; done
        omnitrace -e -v 1 -o ls.inst -- ls
        ./ls.inst
        omnitrace -e -v 1 --simulate -- ls
        for i in omnitrace-ls-output/*; do echo -e "\n\n --> ${i} \n\n"; cat ${i}; done
        omnitrace -e -v 1 -- ls

    - name: CTest Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ctest-log
        path: |
          build/*.log

    - name: Data Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: data-files
        path: |
          build/omnitrace-tests-output/**/*.txt
