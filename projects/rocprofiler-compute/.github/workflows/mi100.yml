name: mi100

on:
  push:
    branches:
      - '2.x'

  # Allows manual execution
  workflow_dispatch:            

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: [mi100, rhel9]
    env:
       PYTHONPATH: /home1/ciuser/omniperf_deps
#       PYTHONPATH: ${{ github.workspace }}/python-libs
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: pythonpath
        run: echo ${PYTHONPATH}
      - name: Install Python collateral (build and test)
        run: |
           pip3 install -t ${PYTHONPATH} -r requirements.txt
           pip3 install -t ${PYTHONPATH} -r requirements-test.txt
      - name: Load ROCm
        run: |
          module load hpcfund
          echo $PATH > $GITHUB_PATH
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> "$GITHUB_ENV"
      - name: Check Environment
        run: |
          echo "PATH=$PATH"
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
      - name: Configure
        run: |
          mkdir build
          cd build
          ml cmake
          cmake -DENABLE_COVERAGE=ON ..
      - name: Create HIP binary (vcopy)
        run: hipcc -o tests/vcopy ./sample/vcopy.cpp
      # - name: path foo
      #   run: |
      #     module list
      #     module load hpcfund
      #     which rocminfo          
      #     echo $LD_LIBRARY_PATH
      #     ml swap rocm rocm/5.5.1
      #     which rocminfo
      #     echo $LD_LIBRARY_PATH
      - name: rocminfo
        run: |
          srun -N 1 -J omniperf -p ci -t 00:05:00 rocminfo
      - name: Run [profile] mode
        run: |
          cd build
          srun -N 1 -J omniperf -p ci -t 00:20:00 ctest --verbose -R test_profile_kernel_execution
#         srun -N 1 -J omniperf -p ci -t 00:20:00 ctest -j 4 --resource-spec-file ../tests/4gpus.json --verbose -L profile
##       - name: Run [analyze] mode
##         if: '!cancelled()'
##         run: |
##           cd build
##           srun -N 1 -J omniperf -p ci -t 00:55:00 ctest --verbose -R test_analyze_commands
## ##       - name: Pytest coverage comment
## ##         if: '!cancelled()'
## ##         uses: MishaKav/pytest-coverage-comment@v1.1.48
## ##         with:
## ##           pytest-xml-coverage-path: 'tests/coverage.xml'
## ##           junitxml-path: 'tests/test-results.xml'
## ##           coverage-path-prefix: src/
