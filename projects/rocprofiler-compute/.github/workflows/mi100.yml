name: mi100

on:
  push:
    branches:
      - '2.x'

  # Allows manual execution
  workflow_dispatch:            

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: [mi100, rhel9]
    env:
       PYTHONPATH: /home1/ciuser/omniperf_deps
#       PYTHONPATH: ${{ github.workspace }}/python-libs
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: pythonpath
        run: echo ${PYTHONPATH}
      - name: Install Python collateral (build and test)
        run: |
           pip3 install --upgrade -t ${PYTHONPATH} -r requirements.txt
           pip3 install --upgrade -t ${PYTHONPATH} -r requirements-test.txt
      - name: Configure
        run: |
          mkdir build
          cd build
          ml cmake
          cmake -DENABLE_COVERAGE=OFF ..
      - name: Create HIP binary (vcopy)
        run: hipcc -o tests/vcopy ./sample/vcopy.cpp
        name: path foo
        run: |
          module list
          echo $LD_LIBRARY_PATH
          ml swap rocm rocm/5.5.1
          echo $LD_LIBRARY_PATH
      - name: rocm-smi
        run: |
          rocm-smi
          srun -N 1 -J omniperf -p ci -t 00:05:00 rocm-smi
      - name: rocminfo
        run: |
          ml swap rocm rocm/5.5.1
          srun -N 1 -J omniperf -p ci -t 00:05:00 rocminfo
      - name: Run [profile] mode
        run: |
          cd build
          ulimit -a
          ml swap rocm rocm/5.5.1
          module list
          printenv
          srun -N 1 -J omniperf -p ci -t 00:20:00 ctest --verbose -R test_profile_kernel_execution
#         srun -N 1 -J omniperf -p ci -t 00:20:00 ctest -j 4 --resource-spec-file ../tests/4gpus.json --verbose -L profile
##       - name: Run [analyze] mode
##         if: '!cancelled()'
##         run: |
##           cd build
##           srun -N 1 -J omniperf -p ci -t 00:55:00 ctest --verbose -R test_analyze_commands
## ##       - name: Pytest coverage comment
## ##         if: '!cancelled()'
## ##         uses: MishaKav/pytest-coverage-comment@v1.1.48
## ##         with:
## ##           pytest-xml-coverage-path: 'tests/coverage.xml'
## ##           junitxml-path: 'tests/test-results.xml'
## ##           coverage-path-prefix: src/
