# AUTOGENERATED FILE. Only edit for testing purposes, not for development. Generated from utils/unified_config.yaml. Generated by utils/split_config.py
Panel Config:
  id: 1500
  title: Address Processing Unit and Data Return Path (TA/TD)
  metrics_description:
    Address Processing Unit Busy: Percent of the total CU cycles the address processor
      was busy
    Address Stall: Percent of the total CU cycles the address processor was stalled
      from sending address requests further into the vL1D pipeline.
    Data Stall: Percent of the total CU cycles the address processor was stalled from
      sending write/atomic data further into the vL1D pipeline.
    "Data-Processor \u2192 Address Stall": Percent of total CU cycles the address
      processor was stalled waiting to send command data to the data processor.
    Total Instructions: The total number of memory instructions executed by the address
      processer over all compute units on the accelerator, per normalization unit.
    Global/Generic Instructions: The total number of global & generic memory instructions
      executed on all compute units on the accelerator, per normalization unit.
    Global/Generic Read Instructions: The total number of global & generic memory
      read instructions executed on all compute units on the accelerator, per normalization
      unit.
    Global/Generic Write Instructions: The total number of global & generic memory
      write instructions executed on all compute units on the accelerator, per normalization
      unit.
    Global/Generic Atomic Instructions: The total number of global & generic memory
      atomic (with and without return) instructions executed on all compute units
      on the accelerator, per normalization unit.
    Spill/Stack Instructions: The total number of spill/stack memory instructions
      executed on all compute units on the accelerator, per normalization unit.
    Spill/Stack Read Instructions: The total number of spill/stack memory read instructions
      executed on all compute units on the accelerator, per normalization unit.
    Spill/Stack Write Instructions: The total number of spill/stack memory write instructions
      executed on all compute units on the accelerator, per normalization unit.
    Spill/Stack Atomic Instructions: The total number of spill/stack memory atomic
      (with and without return) instructions executed on all compute units on the
      accelerator, per normalization unit. Typically unused as these memory operations
      are typically used to implement thread-local storage.
    Spill/Stack Total Cycles: The number of cycles the address processing unit spent
      working on spill/stack instructions, per normalization unit.
    Spill/Stack Coalesced Read: The number of cycles the address processing unit spent
      working on coalesced spill/stack read instructions, per normalization unit.
    Spill/Stack Coalesced Write: The number of cycles the address processing unit
      spent working on coalesced spill/stack write instructions, per normalization
      unit.
    Data-Return Busy: Percent of the total CU cycles the data-return unit was busy
      processing or waiting on data to return to the CU.
    "Cache RAM \u2192 Data-Return Stall": Percent of the total CU cycles the data-return
      unit was stalled on data to be returned from the vL1D Cache RAM.
    "Workgroup manager \u2192 Data-Return Stall": Percent of the total CU cycles the
      data-return unit was stalled by the workgroup manager due to initialization
      of registers as a part of launching new workgroups.
    Coalescable Instructions: The number of instructions submitted to the data-return
      unit by the address processor that were found to be coalescable, per normalization
      unit.
    Read Instructions: The number of read instructions submitted to the data-return
      unit by the address processor summed over all compute units on the accelerator,
      per normalization unit. This is expected to be the sum of global/generic and
      spill/stack reads in the address processor.
    Write Instructions: The number of store instructions submitted to the data-return
      unit by the address processor summed over all compute units on the accelerator,
      per normalization unit. This is expected to be the sum of global/generic and
      spill/stack stores in the address processor.
    Atomic Instructions: The number of atomic instructions submitted to the data-return
      unit by the address processor summed over all compute units on the accelerator,
      per normalization unit. This is expected to be the sum of global/generic and
      spill/stack atomics in the address processor.
    Write Ack Instructions: The total number of write acknowledgements submitted by
      data-return unit to SQ, summed over all compute units on the accelerator, per
      normalization unit.
  data source:
  - metric_table:
      id: 1501
      title: Busy and stall metrics
      header:
        metric: Metric
        avg: Avg
        min: Min
        max: Max
        unit: Unit
      metric:
        Address Processing Unit Busy:
          avg: AVG(((100 * TA_TA_BUSY_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          min: MIN(((100 * TA_TA_BUSY_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          max: MAX(((100 * TA_TA_BUSY_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          unit: pct
        Address Stall:
          avg: AVG(((100 * TA_ADDR_STALLED_BY_TC_CYCLES_sum) / ($GRBM_GUI_ACTIVE_PER_XCD
            * $cu_per_gpu)))
          min: MIN(((100 * TA_ADDR_STALLED_BY_TC_CYCLES_sum) / ($GRBM_GUI_ACTIVE_PER_XCD
            * $cu_per_gpu)))
          max: MAX(((100 * TA_ADDR_STALLED_BY_TC_CYCLES_sum) / ($GRBM_GUI_ACTIVE_PER_XCD
            * $cu_per_gpu)))
          unit: pct
        Data Stall:
          avg: AVG(((100 * TA_DATA_STALLED_BY_TC_CYCLES_sum) / ($GRBM_GUI_ACTIVE_PER_XCD
            * $cu_per_gpu)))
          min: MIN(((100 * TA_DATA_STALLED_BY_TC_CYCLES_sum) / ($GRBM_GUI_ACTIVE_PER_XCD
            * $cu_per_gpu)))
          max: MAX(((100 * TA_DATA_STALLED_BY_TC_CYCLES_sum) / ($GRBM_GUI_ACTIVE_PER_XCD
            * $cu_per_gpu)))
          unit: pct
        "Data-Processor \u2192 Address Stall":
          avg: AVG(((100 * TA_ADDR_STALLED_BY_TD_CYCLES_sum) / ($GRBM_GUI_ACTIVE_PER_XCD
            * $cu_per_gpu)))
          min: MIN(((100 * TA_ADDR_STALLED_BY_TD_CYCLES_sum) / ($GRBM_GUI_ACTIVE_PER_XCD
            * $cu_per_gpu)))
          max: MAX(((100 * TA_ADDR_STALLED_BY_TD_CYCLES_sum) / ($GRBM_GUI_ACTIVE_PER_XCD
            * $cu_per_gpu)))
          unit: pct
        "Sequencer \u2192 TA Address Stall":
          avg: AVG((SQ_VMEM_TA_ADDR_FIFO_FULL / $denom))
          min: MIN((SQ_VMEM_TA_ADDR_FIFO_FULL / $denom))
          max: MAX((SQ_VMEM_TA_ADDR_FIFO_FULL / $denom))
          unit: (Cycles + $normUnit)
        "Sequencer \u2192 TA Command Stall":
          avg: AVG((SQ_VMEM_TA_CMD_FIFO_FULL / $denom))
          min: MIN((SQ_VMEM_TA_CMD_FIFO_FULL / $denom))
          max: MAX((SQ_VMEM_TA_CMD_FIFO_FULL / $denom))
          unit: (Cycles + $normUnit)
        "Sequencer \u2192 TA Data Stall":
          avg: AVG((SQ_VMEM_WR_TA_DATA_FIFO_FULL / $denom))
          min: MIN((SQ_VMEM_WR_TA_DATA_FIFO_FULL / $denom))
          max: MAX((SQ_VMEM_WR_TA_DATA_FIFO_FULL / $denom))
          unit: (Cycles + $normUnit)
  - metric_table:
      id: 1502
      title: Instruction counts
      header:
        metric: Metric
        avg: Avg
        min: Min
        max: Max
        unit: Unit
      metric:
        Total Instructions:
          avg: AVG((TA_TOTAL_WAVEFRONTS_sum / $denom))
          min: MIN((TA_TOTAL_WAVEFRONTS_sum / $denom))
          max: MAX((TA_TOTAL_WAVEFRONTS_sum / $denom))
          unit: (Instructions  + $normUnit)
        Global/Generic Instructions:
          avg: AVG((TA_FLAT_WAVEFRONTS_sum / $denom))
          min: MIN((TA_FLAT_WAVEFRONTS_sum / $denom))
          max: MAX((TA_FLAT_WAVEFRONTS_sum / $denom))
          unit: (Instructions  + $normUnit)
        Global/Generic Read Instructions:
          avg: AVG((TA_FLAT_READ_WAVEFRONTS_sum / $denom))
          min: MIN((TA_FLAT_READ_WAVEFRONTS_sum / $denom))
          max: MAX((TA_FLAT_READ_WAVEFRONTS_sum / $denom))
          unit: (Instructions  + $normUnit)
        Global/Generic Write Instructions:
          avg: AVG((TA_FLAT_WRITE_WAVEFRONTS_sum / $denom))
          min: MIN((TA_FLAT_WRITE_WAVEFRONTS_sum / $denom))
          max: MAX((TA_FLAT_WRITE_WAVEFRONTS_sum / $denom))
          unit: (Instructions  + $normUnit)
        Global/Generic Atomic Instructions:
          avg: AVG((TA_FLAT_ATOMIC_WAVEFRONTS_sum / $denom))
          min: MIN((TA_FLAT_ATOMIC_WAVEFRONTS_sum / $denom))
          max: MAX((TA_FLAT_ATOMIC_WAVEFRONTS_sum / $denom))
          unit: (Instructions  + $normUnit)
        Spill/Stack Instructions:
          avg: AVG((TA_BUFFER_WAVEFRONTS_sum / $denom))
          min: MIN((TA_BUFFER_WAVEFRONTS_sum / $denom))
          max: MAX((TA_BUFFER_WAVEFRONTS_sum / $denom))
          unit: (Instructions  + $normUnit)
        Spill/Stack Read Instructions:
          avg: AVG((TA_BUFFER_READ_WAVEFRONTS_sum / $denom))
          min: MIN((TA_BUFFER_READ_WAVEFRONTS_sum / $denom))
          max: MAX((TA_BUFFER_READ_WAVEFRONTS_sum / $denom))
          unit: (Instructions  + $normUnit)
        Spill/Stack Write Instructions:
          avg: AVG((TA_BUFFER_WRITE_WAVEFRONTS_sum / $denom))
          min: MIN((TA_BUFFER_WRITE_WAVEFRONTS_sum / $denom))
          max: MAX((TA_BUFFER_WRITE_WAVEFRONTS_sum / $denom))
          unit: (Instructions  + $normUnit)
        Spill/Stack Atomic Instructions:
          avg: AVG((TA_BUFFER_ATOMIC_WAVEFRONTS_sum / $denom))
          min: MIN((TA_BUFFER_ATOMIC_WAVEFRONTS_sum / $denom))
          max: MIN((TA_BUFFER_ATOMIC_WAVEFRONTS_sum / $denom))
          unit: (Instructions  + $normUnit)
  - metric_table:
      id: 1503
      title: Spill and stack metrics
      header:
        metric: Metric
        avg: Avg
        min: Min
        max: Max
        unit: Unit
      metric:
        Spill/Stack Total Cycles:
          avg: AVG((TA_BUFFER_TOTAL_CYCLES_sum / $denom))
          min: MIN((TA_BUFFER_TOTAL_CYCLES_sum / $denom))
          max: MAX((TA_BUFFER_TOTAL_CYCLES_sum / $denom))
          unit: (Cycles  + $normUnit)
        Spill/Stack Coalesced Read:
          avg: AVG((TA_BUFFER_COALESCED_READ_CYCLES_sum / $denom))
          min: MIN((TA_BUFFER_COALESCED_READ_CYCLES_sum / $denom))
          max: MAX((TA_BUFFER_COALESCED_READ_CYCLES_sum / $denom))
          unit: (Cycles  + $normUnit)
        Spill/Stack Coalesced Write:
          avg: AVG((TA_BUFFER_COALESCED_WRITE_CYCLES_sum / $denom))
          min: MIN((TA_BUFFER_COALESCED_WRITE_CYCLES_sum / $denom))
          max: MAX((TA_BUFFER_COALESCED_WRITE_CYCLES_sum / $denom))
          unit: (Cycles  + $normUnit)
  - metric_table:
      id: 1504
      title: Vector L1 data-return path or Texture Data (TD)
      header:
        metric: Metric
        avg: Avg
        min: Min
        max: Max
        unit: Unit
      metric:
        Data-Return Busy:
          avg: AVG(((100 * TD_TD_BUSY_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          min: MIN(((100 * TD_TD_BUSY_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          max: MAX(((100 * TD_TD_BUSY_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          unit: pct
        "Cache RAM \u2192 Data-Return Stall":
          avg: AVG(((100 * TD_TC_STALL_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          min: MIN(((100 * TD_TC_STALL_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          max: MAX(((100 * TD_TC_STALL_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          unit: pct
        "Workgroup manager \u2192 Data-Return Stall":
          avg: AVG(((100 * TD_SPI_STALL_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          min: MIN(((100 * TD_SPI_STALL_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          max: MAX(((100 * TD_SPI_STALL_sum) / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu)))
          unit: pct
        Coalescable Instructions:
          avg: AVG((TD_COALESCABLE_WAVEFRONT_sum / $denom))
          min: MIN((TD_COALESCABLE_WAVEFRONT_sum / $denom))
          max: MAX((TD_COALESCABLE_WAVEFRONT_sum / $denom))
          unit: (Instructions  + $normUnit)
        Read Instructions:
          avg: AVG((((TD_LOAD_WAVEFRONT_sum - TD_STORE_WAVEFRONT_sum) - TD_ATOMIC_WAVEFRONT_sum)
            / $denom))
          min: MIN((((TD_LOAD_WAVEFRONT_sum - TD_STORE_WAVEFRONT_sum) - TD_ATOMIC_WAVEFRONT_sum)
            / $denom))
          max: MAX((((TD_LOAD_WAVEFRONT_sum - TD_STORE_WAVEFRONT_sum) - TD_ATOMIC_WAVEFRONT_sum)
            / $denom))
          unit: (Instructions  + $normUnit)
        Write Instructions:
          avg: AVG((TD_STORE_WAVEFRONT_sum / $denom))
          min: MIN((TD_STORE_WAVEFRONT_sum / $denom))
          max: MAX((TD_STORE_WAVEFRONT_sum / $denom))
          unit: (Instructions  + $normUnit)
        Atomic Instructions:
          avg: AVG((TD_ATOMIC_WAVEFRONT_sum / $denom))
          min: MIN((TD_ATOMIC_WAVEFRONT_sum / $denom))
          max: MAX((TD_ATOMIC_WAVEFRONT_sum / $denom))
          unit: (Instructions  + $normUnit)
